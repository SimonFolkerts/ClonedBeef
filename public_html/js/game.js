$(document).ready(function () {

    //Editor contents
    var contents = [];

//########## Step One
    contents[0] = ['function startGame() {\r\n    myGameArea.start();\r\n} \n \nvar myGameArea = {\r\n    canvas : document.getElementById("gameArea"),\r\n    start : function() {\r\n        this.canvas.width = 480;\r\n        this.canvas.height = 320; \r\n        this.context = this.canvas.getContext(\"2d);\");\r\n    }\r\n};', 'javascript'];
    
//########## Step Two
    contents[1] = ['function startGame() {\r\n    myGameArea.start();\r\n    myGamePiece = new component(30, 30, \"black\", 10, 120);\r\n}\n\nfunction component(width, height, color, x, y) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.x = x;\r\n    this.y = y;\r\n    ctx = myGameArea.context;\r\n    ctx.fillstyle = color;\r\n    ctx.fillRect(this.x, this.y, this.width, this.height);\r\n}', 'javascript'];
    
//########## Step Three
    contents[2] = ['var myGameArea = {\r\n    start : function() {\r\n        //existing code \n        this.interval = setInterval(updateGameArea, 20);\r\n    },\r\n    clear : function() {\r\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n};\n\nfunction component(width, height, color, x, y) {\n    //existing code\n    this.update = function(){\r\n        ctx = myGameArea.context;\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(this.x, this.y, this.width, this.height);\r\n    };\n}\n\nfunction updateGameArea() {\r\n    myGameArea.clear();\r\n    myGamePiece.update();\r\n\n    \/\/counter logic\r\n    if (count <= 50) {\r\n        count++;\r\n    } else {\r\n        count = 0;\r\n    }\r\n    $(\'#count-2\').html(count);\r\n}\r\n\r\n    var count = 0;\r\n}', 'javascript'];
    
//########## Step Four
    contents[3] = ['function startGame() {\r\n    myGameArea.start();\r\n    myGamePiece = new component(30, 30, \"black\", 10, 120);\r\n}\r\n\r\nvar myGameArea = {\r\n    start: function () {\r\n        this.canvas = document.getElementById(\'canvas-step-\' + (step - 1));\r\n        this.canvas.width = 480;\r\n        this.canvas.height = 320;\r\n        this.context = this.canvas.getContext(\"2d\");\r\n        this.interval = setInterval(updateGameArea, 20);\r\n    },\r\n    clear: function () {\r\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n};\r\n\r\nfunction component(width, height, color, x, y) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.update = function () {\r\n        ctx = myGameArea.context;\r\n        ctx.fillstyle = color;\r\n        ctx.fillRect(this.x, this.y, this.width, this.height);\r\n    };\r\n}\r\n\r\nfunction updateGameArea() {\r\n    myGameArea.clear();\r\n    myGamePiece.update();\r\n}\r\n\r\nstartGame();', 'javascript'];

//########## Step Five
    contents[4] = ['function component(width, height, color, x, y) {\n    //existing code\n    this.newPos = function() {\r\n        this.x += targetX;\r\n        this.y += targetY; \r\n        };\n}\n\nfunction component(width, height, color, x, y) {\n    start: function () {\n        //existing code\n        this.mouseX = 0;\r\n        this.mouseY = 0;\r\n        this.canvas.addEventListener(\"mousemove\", function (event) {\r\n            myGameArea.mouseX = event.offsetX;\r\n            myGameArea.mouseY = event.offsetY;\r\n        });\r\n    }\n}\n\nfunction updateGameArea() {\r\n        myGameArea.clear();\r\n        myGamePiece.newPos(myGameArea.mouseX, myGameArea.mouseY);\r\n        myGamePiece.update();\r\n}', 'javascript'];
    
//########## Step Six
    contents[5] = ['function startGame() {\r\n    myGamePiece = new component(30, 30, \"black\", 20, 120, 15, 100);\r\n}\n\nfunction component(width, height, color, x, y, accel, speed) {\r\n    \/\/existing code\r\n    this.acceleration = accel;\r\n    this.maxSpeed = speed;\r\n    \r\n    this.newPos = function (targetY) {\r\n        \/\/ X direction removed, myGamePiece will only move vertically\r\n        this.y += (clamp((targetY - this.y), -this.maxSpeed, this.maxSpeed)) \/ this.acceleration;\r\n    };\r\n}\r\n\r\nfunction clamp(num, min, max) {\r\n    return num <= min ? min : num >= max ? max : num;\r\n}\r\n\r\nfunction updateGameArea() {\r\n    \/\/existing code\r\n    myGamePiece.newPos(myGameArea.mouseY);\r\n}', 'javascript'];
    
//########## Step Seven
    contents[6] = ['function startGame() {\r\n    myGamePiece = new playerCharacter(30, 30, \"black\", 20, 120, 15, 100);\r\n    enemyPiece = new enemyBasic(30, 30, \"red\", 490, (Math.random() * 300), 0, 0);\r\n}\r\n\r\nfunction playerCharacter(width, height, color, x, y, accel, speed) {\r\n    \/\/existing code\r\n    this.active = true;\r\n}\r\n\r\nfunction enemyBasic(width, height, color, x, y, accel, speed) {\r\n    \/\/existing code\r\n    this.active = true;\r\n    this.update = function () {\r\n        \/\/existing code\r\n        if (this.x <= 0) {\r\n            this.active = false;\r\n        }\r\n    };\r\n    this.newPos = function () {\r\n        this.x += -3;\r\n    };\r\n}\r\n\r\nfunction updateGameArea() {\r\n    myGameArea.clear();\r\n\r\n    if ((Math.random() * 1000) > 990) {\r\n         enemyPiece = new enemyBasic(30, 30, \"red\", 490, (Math.random() * 320), 0, 0);\r\n    }\r\n\r\n    if (enemyPiece.active) {\r\n        enemyPiece.update();\r\n        enemyPiece.newPos();\r\n    }\r\n\r\n    myGamePiece.newPos(myGameArea.mouseY);\r\n    myGamePiece.update();\r\n}', 'javascript'];

//########## Step Eight
    contents[7] = ['var myGameArea = {\r\n    start: function () {\r\n        this.enemies = [];\r\n        \/\/existing code\r\n    }\r\n};\r\n\r\nfunction updateGameArea() {\r\n    myGameArea.clear();\r\n        \r\n    if ((Math.random() * 1000) > 990) {\r\n         myGameArea.enemies.push(new enemyBasic(30, 30, \"red\", 490, (Math.random() * 280), 0, 0));\r\n    }\r\n    \r\n    $(myGameArea.enemies).each(function() {\r\n        this.newPos();\r\n        this.update();\r\n    });\r\n    \r\n    myGameArea.enemies = myGameArea.enemies.filter(function(enemyBasic) {\r\n        return enemyBasic.active;\r\n    });\r\n        \r\n    myGamePiece.newPos(myGameArea.mouseY);\r\n    myGamePiece.update();\r\n}', 'javascript'];

//########## Step Nine
    contents[8] = ['$(\"#canvas-step-\" + step).click(function () {\r\n    if (!myGameArea.canvas) {\r\n        startGame();\r\n    } else if (!myGameArea.active) {\r\n        myGameArea.interval = setInterval(updateGameArea, 20);\r\n        myGameArea.active = true;\r\n    }\r\n});\r\n\r\n$(window).blur(function () {\r\n    myGameArea.stop();\r\n});\r\n\r\nvar myGameArea = {\r\n    start: function () {\r\n        this.active = true;\r\n        \/\/existing code\r\n    },\r\n    \/\/existing code\r\n    stop: function () {\r\n        clearInterval(this.interval);\r\n        this.active = false;\r\n    }\r\n};\r\n\r\nfunction collision(a, b) {\r\n    return a.x < b.x + b.width &&\r\n            a.x + a.width > b.x &&\r\n            a.y < b.y + b.height &&\r\n            a.y + a.height > b.y;\r\n}\r\n\r\nfunction collisionHandler() {\r\n    $(myGameArea.enemies).each(function () {\r\n        if (collision(myGamePiece, this)) {\r\n            myGameArea.stop();\r\n        }\r\n    });\r\n}\r\n\r\nfunction updateGameArea() {\r\n    collisionHandler();\r\n    \/\/existing code\r\n}', 'javascript'];

//########## Step Ten
    contents[9] = ['\r\nvar count = 0;\r\nvar step = 9;\r\n\r\n$(\"#canvas-step-\" + step).click(function () {\r\n    if (!myGameArea.canvas) {\r\n        startGame();\r\n    } else if (!myGameArea.active) {\r\n        myGameArea.interval = setInterval(updateGameArea, 20);\r\n        myGameArea.active = true;\r\n    }\r\n});\r\n$(window).blur(function () {\r\n    myGameArea.stop();\r\n});\r\n\r\nfunction startGame() {\r\n    myGameArea.start();\r\n    myGamePiece = new playerCharacter(30, 30, \"black\", 20, 120, 15, 100);\r\n    enemyPiece = new enemyBasic(30, 30, \"red\", 490, (Math.random() * 280), 0, 0);\r\n}\r\n\r\nvar myGameArea = {\r\n    start: function () {\r\n        this.active = true;\r\n        this.enemies = [];\r\n        this.canvas = document.getElementById(\'canvas-step-\' + (step));\r\n        this.canvas.width = 480;\r\n        this.canvas.height = 320;\r\n        this.context = this.canvas.getContext(\"2d\");\r\n        this.interval = setInterval(updateGameArea, 20);\r\n        this.mouseX = 0;\r\n        this.mouseY = 0;\r\n        this.canvas.addEventListener(\"mousemove\", function (event) {\r\n            myGameArea.mouseX = event.offsetX;\r\n            myGameArea.mouseY = event.offsetY;\r\n        });\r\n    },\r\n    clear: function () {\r\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    },\r\n    stop: function () {\r\n        clearInterval(this.interval);\r\n        this.active = false;\r\n    }\r\n};\r\n\r\nfunction playerCharacter(width, height, color, x, y, accel, speed) {\r\n    this.active = true;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.acceleration = accel;\r\n    this.maxSpeed = speed;\r\n    this.update = function () {\r\n        ctx = myGameArea.context;\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(this.x, this.y, this.width, this.height);\r\n    };\r\n    this.newPos = function (targetY) {\r\n        this.y += (clamp((targetY - this.y), -this.maxSpeed, this.maxSpeed)) \/ this.acceleration;\r\n    };\r\n}\r\n\r\nfunction enemyBasic(width, height, color, x, y, accel, speed) {\r\n    this.active = true;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.acceleration = accel;\r\n    this.maxSpeed = speed;\r\n    this.update = function () {\r\n        ctx = myGameArea.context;\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(this.x, this.y, this.width, this.height);\r\n        if (this.x <= 0) {\r\n            this.active = false;\r\n        }\r\n    };\r\n    this.newPos = function () {\r\n        this.x += -3;\r\n    };\r\n}\r\n\r\nfunction clamp(num, min, max) {\r\n    return num <= min ? min : num >= max ? max : num;\r\n}\r\n\r\nfunction collision(a, b) {\r\n    return a.x < b.x + b.width &&\r\n            a.x + a.width > b.x &&\r\n            a.y < b.y + b.height &&\r\n            a.y + a.height > b.y;\r\n}\r\n\r\nfunction collisionHandler() {\r\n    $(myGameArea.enemies).each(function () {\r\n        if (collision(myGamePiece, this)) {\r\n            myGameArea.stop();\r\n        }\r\n    });\r\n}\r\n\r\nfunction updateGameArea() {\r\n    collisionHandler();\r\n    myGameArea.clear();\r\n\r\n    if ((Math.random() * 1000) > 990) {\r\n        myGameArea.enemies.push(new enemyBasic(30, 30, \"red\", 490, (Math.random() * 280), 0, 0));\r\n    }\r\n\r\n    $(myGameArea.enemies).each(function () {\r\n        this.newPos();\r\n        this.update();\r\n    });\r\n\r\n    myGameArea.enemies = myGameArea.enemies.filter(function (enemyBasic) {\r\n        return enemyBasic.active;\r\n    });\r\n\r\n    myGamePiece.newPos(myGameArea.mouseY);\r\n    myGamePiece.update();\r\n}', 'javascript'];

//########## Step Eleven
    contents[10] = ['var myGameArea = {\r\n    start: function () {\r\n        \/\/existing code\r\n        this.playerMissiles = [];\r\n        this.canvas.addEventListener(\"click\", function () {\r\n                myGameArea.playerMissiles.push(new playerMissile(myGamePiece.x, myGamePiece.y, myGameArea.mouseX, myGameArea.mouseY));\r\n        });\r\n    }\r\n}\r\n\r\nfunction playerMissile(x, y, targetX, targetY) {\r\n    this.active = true;\r\n    this.width = 15;\r\n    this.height = 15;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.velocityX;\r\n    this.velocityY;\r\n    this.acceleration = 0.3;\r\n    this.thrust = 0;\r\n    this.targetX = targetX;\r\n    this.targetY = targetY;\r\n    this.update = function () {\r\n        ctx = myGameArea.context;\r\n        ctx.fillStyle = \"blue\";\r\n        ctx.fillRect(this.x, this.y, this.width, this.height);\r\n        if (Math.abs(this.x - this.targetX) < 10) {\r\n            this.active = false;\r\n        }\r\n    };\r\n    this.newPos = function () {\r\n        var tx = this.targetX - this.x;\r\n        var ty = this.targetY - this.y;\r\n        var dist = Math.sqrt(tx * tx + ty * ty);\r\n\r\n        this.thrust = this.thrust + this.acceleration;\r\n\r\n        this.velocityX = (tx \/ dist) * this.thrust;\r\n        this.velocityY = (ty \/ dist) * this.thrust;\r\n\r\n        this.x += this.velocityX;\r\n        this.y += this.velocityY;\r\n    };\r\n}\r\n\r\nfunction collisionHandler() {\r\n    $(myGameArea.enemies).each(function () {\r\n        enemy = this;\r\n        if (collision(myGamePiece, enemy)) {\r\n            myGameArea.stop();\r\n        }\r\n        $(myGameArea.playerMissiles).each(function () {\r\n            if (collision(enemy, this)) {\r\n                enemy.active = false;\r\n                this.active = false;\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction updateGameArea() {\r\n    myGameArea.clear();\r\n\r\n    myGamePiece.newPos(myGameArea.mouseY);\r\n    myGamePiece.update();\r\n\r\n    if ((Math.random() * 1000) > 990) {\r\n        myGameArea.enemies.push(new enemyBasic(30, 30, \"red\", 490, (Math.random() * 280), 0, 0));\r\n    }\r\n\r\n    myGameArea.enemies = myGameArea.enemies.filter(function (enemyBasic) {\r\n        return enemyBasic.active;\r\n    });\r\n\r\n    $(myGameArea.enemies).each(function () {\r\n        this.newPos();\r\n        this.update();\r\n    });\r\n\r\n    myGameArea.playerMissiles = myGameArea.playerMissiles.filter(function (playerMissile) {\r\n        return playerMissile.active;\r\n    });\r\n\r\n    $(myGameArea.playerMissiles).each(function () {\r\n        this.newPos();\r\n        this.update();\r\n    });\r\n    collisionHandler();\r\n}', 'javascript']

//########## Step Eleven
    contents[11] = ['var myGameArea = {\r\n    start: function () {\r\n       \/\/existing code\r\n        this.frameNo = 0;\r\n        this.mouseDown = false;\r\n        this.canvas.addEventListener(\"mousedown\", function () {\r\n            myGameArea.mouseDown = true;\r\n        });\r\n        this.canvas.addEventListener(\"mouseup\", function () {\r\n            myGameArea.mouseDown = false;\r\n        });\r\n    }\r\n   \/\/existing code\r\n};\r\n\r\nfunction playerCharacter(width, height, color, x, y, accel, speed) {\r\n   \/\/existing code\r\n    this.color = color;\r\n    this.targets = [];\r\n    this.i = 0;\r\n    this.update = function () {\r\n        ctx = myGameArea.context;\r\n        ctx.fillStyle = this.color;\r\n        ctx.fillRect(this.x, this.y, this.width, this.height);\r\n        this.fireControl();\r\n    };\r\n    this.fireControl = function () {\r\n        if (!myGameArea.mouseDown && this.targets.length >= 1) {\r\n            if (this.i <= this.targets.length && (myGameArea.frameNo % 3 === 0)) {\r\n                this.i = 0;\r\n                this.fire(this.targets[this.i]);\r\n                this.targets.splice(this.i, 1);\r\n                this.i++;\r\n            }\r\n        }\r\n    };\r\n   \/\/existing code\r\n    this.fire = function (target) {\r\n        myGameArea.playerMissiles.push(new playerMissile(myGamePiece.x, myGamePiece.y, target));\r\n    };\r\n}\r\n\r\nfunction enemyBasic(width, height, color, x, y, accel, speed) {\r\n   \/\/existing code\r\n    this.color = color;\r\n    this.targeted = false;\r\n    this.speed = speed;\r\n    this.update = function () {\r\n        ctx = myGameArea.context;\r\n        ctx.fillStyle = this.color;\r\n        ctx.fillRect(this.x, this.y, this.width, this.height);\r\n        if (this.x <= -20) {\r\n            this.active = false;\r\n        }\r\n        if (mouseOver(this) && !this.targeted) {\r\n            if (myGameArea.mouseDown) {\r\n                this.targeted = true;\r\n                this.color = \'yellow\';\r\n                myGamePiece.targets.push(this);\r\n            }\r\n        }\r\n    };\r\n    this.newPos = function () {\r\n        this.x += this.speed;\r\n    };\r\n}\r\n\r\nfunction playerMissile(x, y, target) {\r\n   \/\/existing code\r\n    this.age = 0;\r\n    this.target = target;\r\n    this.update = function () {\r\n        this.age++;\r\n        ctx = myGameArea.context;\r\n        ctx.fillStyle = \"blue\";\r\n        ctx.fillRect(this.x, this.y, this.width, this.height);\r\n        if (Math.abs(this.x - this.targetX) < 8 || this.age > 75) {\r\n            this.active = false;\r\n        }\r\n    };\r\n   \/\/existing code\r\n}\r\n\r\nfunction mouseOver(object) {\r\n    return myGameArea.mouseX < object.x + object.width &&\r\n            myGameArea.mouseX > object.x &&\r\n            myGameArea.mouseY < object.y + object.height &&\r\n            myGameArea.mouseY > object.y;\r\n}\r\n\r\nfunction updateGameArea() {\r\n    myGameArea.frameNo++;\r\n    if ((Math.random() * 1000) > (990 - myGameArea.frameNo \/ 100)) {\r\n        myGameArea.enemies.push(new enemyBasic(30, 30, \"red\", 490, (Math.random() * 280), 0, 0));\r\n    }\r\n}', 'javascript']

//########## INIT EDITORS ##########//

    //Get all editors on the page
    var editors = $(".editor");
    //Initialise all editors on the page with theme, mode and contents
    $(editors).each(function () {
        //Get individual editor
        var editorId = $(this).attr('id');
        var editor = ace.edit(editorId);
        //Set parameters
        editor.setTheme("ace/theme/monokai");
        editor.setReadOnly(true);
        editor.setOptions({
            maxLines: 30
        });
        //Get editor number
        editorNumber = parseInt($(this).attr('id').match(/\d+/g) - 1);
        //If an entry exists, apply it to the editor, else throw an error
        if (contents[editorNumber]) {
            //Load contents
            editor.setValue(contents[editorNumber][0]);
            //Load mode
            editor.getSession().setMode("ace/mode/" + contents[editorNumber][1]);
        } else {
            console.log('No contents specified for editor #' + parseInt(editorNumber + 1));
        }
    });
});